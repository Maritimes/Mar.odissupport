thesedefinitive
allDef
defTable
defTable =get(defTableName,envir = .GlobalEnv)
otherDefTable = get(otherDefTableName, envir = .GlobalEnv)
merge(defTable, otherDefTable, all = T)
defTable
otherDefTable
merge(defTable, otherDefTable, all = T)
str(defTable)
str(otherDefTable)
definitive_TSN
definitive_Aphia
_Aphia
defTable
otherDefTable
definitive_TSN
definitive_Aphia
merge(definitive_Aphia, definitive_TSN)
merge(definitive_Aphia, definitive_TSN, all.x = T)
merge(definitive_Aphia, definitive_TSN, all.x = T, by="SPEC")
merge(definitive_Aphia, definitive_TSN, all.x = T, by.x = "SPEC", by.y = "SPEC")
merge(definitive_Aphia, definitive_TSN, all.x = T, by.x = c("SPEC","COMM","CODE"), by.y = ("SPEC","COMM","CODE"))
merge(definitive_Aphia, definitive_TSN, all.x = T, by.x = c("SPEC","COMM","CODE"), by.y = c("SPEC","COMM","CODE"))
merge(definitive_Aphia, definitive_TSN, by.x = c("SPEC","COMM","CODE"), by.y = c("SPEC","COMM","CODE"))
merge(definitive_Aphia, definitive_TSN, by = c("SPEC","COMM","CODE"))
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
thesedefinitive
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
thesedefinitive
defTable
nrow(defTable)
nrow(defTable)==0
thesedefinitive[,otherTheID]<-NA
thesedefinitive[,otherTheIDComment]<-NA
thesedefinitive[,otherTheIDUsed]<-NA
allDef <-thesedefinitive
assign(defTableName,defTable, envir = .GlobalEnv )
get(defTableName,envir = .GlobalEnv)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
defTableName
thesedefinitive
defTable =get(defTableName,envir = .GlobalEnv)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
defTable
get(defTableName,envir = .GlobalEnv)
.GlobalEnv[defTableName]
.GlobalEnv$defTableName
.GlobalEnv$definitive_Aphia
defTableName
.GlobalEnv['defTableName']
defTable =get(defTableName,envir = .GlobalEnv)
defTable =get(defTableName,envir = .GlobalEnv)
spec_list[!(spec_list[,colname] %in% defTable$SPEC),]
defTable
spec_list
spec_list[!(spec_list[,colname] %in% defTable$SPEC),]
results
results[colname]
results[!(results[,colname] %in% thesedefinitive[,colname]),]
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
thesedefinitive
defTable
updated = rbind(thesedefinitive,defTable)
thesedefinitive[,otherTheID]<-NA
thesedefinitive[,otherTheIDComment]<-NA
thesedefinitive[,otherTheIDUsed]<-NA
updated = rbind(thesedefinitive,defTable)
updated
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
thesedefinitive
definitive[definitive[,colname],]
definitive[which(definitive[,colname]),]
definitive[,colname]
definitive[which(definitive[,colname] %in% thesedefinitive[,colname]),]
theIDUsed
definitive[which(definitive[,colname] %in% thesedefinitive[,colname] & is.na(definitive[,theIDUsed])) ,]
definitive[which(definitive[,colname] %in% thesedefinitive[,colname] & is.na(definitive[,theIDUsed])) , c(theID,theIDComment,theIDUsed)]
definitive[which(definitive[,colname] %in% thesedefinitive[,colname] & is.na(definitive[,theIDUsed])) ,]
thesedefinitive[which(definitive[,colname] %in% thesedefinitive[,colname] & is.na(definitive[,theIDUsed])) , c(theID,theIDComment,theIDUsed)]
thesedefinitive[which(thesedefinitive[,colname] %in% definitive[,colname]), c(theID,theIDComment,theIDUsed)]
definitive[which(definitive[,colname] %in% thesedefinitive[,colname] & is.na(definitive[,theIDUsed])) , c(theID,theIDComment,theIDUsed)]<-
thesedefinitive[which(thesedefinitive[,colname] %in% definitive[,colname]), c(theID,theIDComment,theIDUsed)]
definitive
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
thesedefinitive
definitive[which(definitive[,colname] %in% thesedefinitive[,colname] & is.na(definitive[,theIDUsed])) ,]
definitive
assign("definitive",definitive, envir = .GlobalEnv )
definitive
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
thesedefinitive
merge(definitive,thesedefinitive)
definitive
definitive[which(definitive[,colname] %in% thesedefinitive[,colname] & is.na(definitive[,theIDUsed])) , ]
tempDef[,c(theID,theIDComment,theIDUsed)]
tempDef=definitive[which(definitive[,colname] %in% thesedefinitive[,colname] & is.na(definitive[,theIDUsed])) , ]
tempDef[,c(theID,theIDComment,theIDUsed)]
definitive
thesedefinitive
merge(definitive, thesedefinitive, by=colname)
excludes <- c(theID,theIDComment,theIDUsed)
names(definitive)
names(definitive) %in% excludes
definitive[names(definitive) %in% excludes]
definitive[!names(definitive) %in% excludes]
merge(definitive[!names(definitive) %in% excludes], thesedefinitive, by=colname)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
merge(definitive[!names(definitive) %in% excludes], thesedefinitive, by=colname)
definitive = merge(definitive[!names(definitive) %in% excludes], thesedefinitive, by=colname)
assign("definitive",definitive, envir = .GlobalEnv )
definitive
definitive
merge(definitive[!names(definitive) %in% excludes], thesedefinitive, by=colname)
definitive = merge(definitive[!names(definitive) %in% excludes], thesedefinitive, by=colname)
assign("definitive",definitive, envir = .GlobalEnv )
definitive
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
definitive = merge(definitive[!names(definitive) %in% excludes], thesedefinitive, by=colname)
assign("definitive",definitive, envir = .GlobalEnv )
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
definitive
get(definitive,envir = .GlobalEnv)
definitive =.GlobalEnv$definitive
definitive
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
merge(definitive[!names(definitive) %in% excludes], thesedefinitive, by=colname)
definitive
definitive
thesedefinitive
definitive =.GlobalEnv$definitive
definitive
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive[is.na(definitive[,theID]),]
theID
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
definitive[is.na(definitive[,theID]),]
merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
cln_definitive = definitive[is.na(definitive[,theID]),]
merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
definitive[definitive[,colname] == cln_definitive[,colname],]
definitive[definitive[,colname] == cln_definitive[,colname],excludes]
definitive[definitive[,colname] == cln_definitive[,colname],excludes]<-cln_definitive[,excludes]
definitive
cln_definitive[,excludes]
excludes
definitive =.GlobalEnv$definitive
definitive[is.na(definitive[,theID]),]
cln_definitive = definitive[is.na(definitive[,theID]),]
cln_definitive[!names(cln_definitive) %in% excludes]
merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
cln_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
definitive[definitive[,colname] == cln_definitive[,colname],]
definitive[definitive[,colname] %in% cln_definitive[,colname],]
cln_definitive[,excludes]
definitive[definitive[,colname] %in% cln_definitive[,colname],excludes]<-cln_definitive[,excludes]
definitive
assign("definitive",definitive, envir = .GlobalEnv )
definitive =.GlobalEnv$definitive
cln_definitive = definitive[is.na(definitive[,theID]),]
#merge the remaining definitive values with the newly found ones(skipping the columns we will be populating)
cln_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
definitive[definitive[,colname] %in% cln_definitive[,colname],excludes]<-cln_definitive[,excludes]
definitive
definitive[is.na(definitive[,theID]),]
definitive[!is.na(definitive[,theID]),]
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
definitive
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
View(definitive)
View(definitive)
View(definitive)
View(definitive)
no_ID
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
View(definitive)
View(cln_definitive)
cln_definitive[,excludes]
definitive =.GlobalEnv$definitive
#only get NA ids so we don't overwrite values
cln_definitive = definitive[is.na(definitive[,theID]),]
#merge the remaining definitive values with the newly found ones(skipping the columns we will be populating)
cln_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
#write the new values to the original data frame
definitive[definitive[,colname] %in% cln_definitive[,colname],excludes]<-cln_definitive[,excludes]
definitive
definitive[!is.na(definitive[,theID]),]
newdefinitive =.GlobalEnv$definitive
#only get NA ids so we don't overwrite values
cln_definitive = newdefinitive[is.na(newdefinitive[,theID]),]
#merge the remaining definitive values with the newly found ones(skipping the columns we will be populating)
cln_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
#write the new values to the original data frame
newdefinitive[newdefinitive[,colname] %in% cln_definitive[,colname],excludes]<-cln_definitive[,excludes]
newdefinitive <- newdefinitive[!is.na(newdefinitive[,theID]),]
newdefinitive
definitive =.GlobalEnv$definitive
definitive =.GlobalEnv$definitive
newdefinitive = definitive
definitive =.GlobalEnv$definitive
newdefinitive = definitive
cln_definitive = definitive[is.na(definitive[,theID]),]
#only get NA ids so we don't overwrite values
#merge the remaining definitive values with the newly found ones(skipping the columns we will be populating)
cln_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
#write the new values to the original data frame
newdefinitive[newdefinitive[,colname] %in% cln_definitive[,colname],excludes]<-cln_definitive[,excludes]
newdefinitive <- newdefinitive[!is.na(newdefinitive[,theID]),]
newdefinitive
definitive
definitive =.GlobalEnv$definitive
newdefinitive = definitive
cln_definitive = definitive[is.na(definitive[,theID]),]
keep_definitive = definitive[!is.na(definitive[,theID]),]
View(keep_definitive)
View(newdefinitive)
cln_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
cln_definitive
definitive =.GlobalEnv$definitive
newdefinitive = definitive
cln_definitive = definitive[is.na(definitive[,theID]),]
keep_definitive = definitive[!is.na(definitive[,theID]),]
merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
cln_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
cln_definitive
definitive
keep_definitive
rbind(cln_definitive, keep_definitive)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
no_ID
definitive
.GlobalEnv$definitive
.GlobalEnv$definitive
no_ID
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
cln_definitive
keep_definitive
definitive
cln_definitive
definitive
keep_definitive
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
keep_definitive
cln_definitive
merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
new_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
str(definitive)
new_definitive[,c(excludes)]
new_definitive[,c("SPEC",excludes)]
definitive[definitive$SPEC %in% new_definitive$SPEC, excludes]
new_definitive[excludes]
definitive[definitive$SPEC %in% new_definitive$SPEC, excludes]<-new_definitive[excludes]
definitive
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
definitive
.GlobalEnv$definitive
.GlobalEnv$definitive
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
searchtype
s.data.frame(t(sapply_pb(df[,colname],chk_taxize, searchtype=searchtype)))
as.data.frame(t(sapply_pb(df[,colname],chk_taxize, searchtype=searchtype)))
colname
df[,colname]
df
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
.GlobalEnv$definitive
missing
missing = checkAndCompare(df = missing,searchtype="common")
merge(df,spec_list)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
View(definitive)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
no_ID
data.frame("SEARCHTERM" = toupper(unlist(no_ID$SEARCHTERM)),
"ID_worrms" = unlist(no_ID$ID_worrms),
"MATCH_worrms" = unlist(no_ID$MATCH_worrms))
no_ID = data.frame("SEARCHTERM" = toupper(unlist(no_ID$SEARCHTERM)),
"ID_worrms" = unlist(no_ID$ID_worrms),
"MATCH_worrms" = unlist(no_ID$MATCH_worrms))
no_ID
assignDefinitive(no_ID, searchtype)
searchtype
no_ID
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
assignDefinitive<-function(results = NULL, searchtype = NULL){
browser()
if (debug) cat("\nin assignDefinitive")
if (searchtype =="scientific"){
searchtypeVal = "scientific name"
colname = "SPEC"
}else{
searchtypeVal = "common name"
colname = "COMM"
}
if(any(grep("taxize",colnames(results))) |(any(grep("worrms",colnames(results))) )){
theID = "AphiaID"
theIDComment = "AphiaID_src"
theIDUsed = "AphiaID_data"
defTableName = "definitive_Aphia"
otherTheID = "TSN"
otherTheIDComment = "TSN_src"
otherTheIDUsed = "TSN_data"
otherDefTableName = "definitive_TSN"
if (any(grep("taxize",colnames(results)))){
results_ID = "ID_taxize"
results_MATCH = "MATCH_taxize"
results_type = "Taxize"
}else if (any(grep("worrms",colnames(results)))){
results_ID = "ID_worrms"
results_MATCH = "MATCH_worrms"
results_type = "Worrms"
}
}else if (any(grep("ritis",colnames(results)))){
#if (colname =="COMM") browser()
theID = "TSN"
theIDComment = "TSN_src"
theIDUsed = "TSN_data"
defTableName = "definitive_TSN"
otherTheID = "AphiaID"
otherTheIDComment = "AphiaID_src"
otherTheIDUsed = "AphiaID_data"
otherDefTableName = "definitive_Aphia"
results_ID = "ID_ritis"
results_MATCH = "MATCH_ritis"
results_type = "ritis"
}
excludes <- c(theID,theIDComment,theIDUsed)
keeperStrings = c("single match","only accepted")
# results = merge(df1, df2, by="SEARCHTERM")
results[theID] = NA
results[theIDComment] = NA
results[grep(paste(keeperStrings,collapse="|"),results[,results_MATCH]),theID]<-results[grep(paste(keeperStrings,collapse="|"),results[,results_MATCH]),results_ID]
#no ID = unmatched
if(nrow(results[is.na(results[,results_ID]),])>0) results[is.na(results[,results_ID]),theIDComment]<-"Unmatched"
#only 1 id present, and it was in the keeper strings (i.e. a confident match)
if(nrow(results[(!is.na(results[,results_ID]) & !is.na(results[,theID])),])>0)
results[(!is.na(results[,results_ID]) & !is.na(results[,theID])),theIDComment] <-paste(results_type)
#all that remain should be those which had 1 or more matches, but none within the keeper strings
if(nrow(results[is.na(results[,theIDComment]),])>0)
results[is.na(results[,theIDComment]),theIDComment]<-"Ambiguous Match"
results[,theIDUsed] =NA
#check the use of theID, below
if (nrow(results[!is.na(results[theID]),])>0) results[!is.na(results[theID]),theIDUsed]<-searchtypeVal
#results_MATCH
results <-results[,c("SEARCHTERM",theID,theIDComment,theIDUsed)]
names(results)[names(results) == 'SEARCHTERM'] <- colname
#'get the records we have confident IDs for and add them to the appropriate
#'definitive table (which is a global object)
thesedefinitive = results[!(results[,theIDComment] %in% c("Ambiguous Match", "Unmatched")),]
#and save the others
theseunhandled = results[!(results[,colname] %in% thesedefinitive[,colname]),]
definitive =.GlobalEnv$definitive
#newdefinitive = definitive
cln_definitive = definitive[is.na(definitive[,theID]),]
keep_definitive = definitive[!is.na(definitive[,theID]),]
if (nrow(thesedefinitive>0)){
#only get NA ids so we don't overwrite values
#merge the remaining definitive values with the newly found ones(skipping the columns we will be populating)
new_definitive = merge(cln_definitive[!names(cln_definitive) %in% excludes], thesedefinitive, by=colname)
new_definitive = new_definitive[,c("SPEC",excludes)]
definitive[definitive$SPEC %in% new_definitive$SPEC, excludes]<-new_definitive[excludes]
#write the new values to the original data frame
# newdefinitive[newdefinitive[,colname] %in% cln_definitive[,colname],excludes]<-cln_definitive[,excludes]
# newdefinitive <- newdefinitive[!is.na(newdefinitive[,theID]),]
assign("definitive", definitive, envir = .GlobalEnv )
}
if (debug) cat("\ndone assignDefinitive")
return(theseunhandled)
}
searchtype
results
searchtypeVal = "common name"
colname = "COMM"
any(grep("taxize",colnames(results))) |(any(grep("worrms",colnames(results))) )
theID = "AphiaID"
theIDComment = "AphiaID_src"
theIDUsed = "AphiaID_data"
defTableName = "definitive_Aphia"
otherTheID = "TSN"
otherTheIDComment = "TSN_src"
otherTheIDUsed = "TSN_data"
otherDefTableName = "definitive_TSN"
excludes <- c(theID,theIDComment,theIDUsed)
keeperStrings = c("single match","only accepted")
# results = merge(df1, df2, by="SEARCHTERM")
results[theID] = NA
results[theIDComment] = NA
results[grep(paste(keeperStrings,collapse="|"),results[,results_MATCH]),theID]<-results[grep(paste(keeperStrings,collapse="|"),results[,results_MATCH]),results_ID]
results
results_ID = "ID_worrms"
results_MATCH = "MATCH_worrms"
results_type = "Worrms"
results[grep(paste(keeperStrings,collapse="|"),results[,results_MATCH]),theID]<-results[grep(paste(keeperStrings,collapse="|"),results[,results_MATCH]),results_ID]
nrow(results[is.na(results[,results_ID]),]
)
nrow(results[(!is.na(results[,results_ID]) & !is.na(results[,theID])),])>0
results
results[is.na(results[,results_ID]),]
nrow(results[is.na(results[,results_ID]),])>0
results[is.na(results[,results_ID]),theIDComment]<-"Unmatched"
nrow(results[is.na(results[,theIDComment]),])>0
results[,theIDUsed] =NA
results
nrow(results[!is.na(results[theID]),])>0
results <-results[,c("SEARCHTERM",theID,theIDComment,theIDUsed)]
names(results)[names(results) == 'SEARCHTERM'] <- colname
results[!(results[,theIDComment] %in% c("Ambiguous Match", "Unmatched")),]
thesedefinitive = results[!(results[,theIDComment] %in% c("Ambiguous Match", "Unmatched")),]
theseunhandled = results[!(results[,colname] %in% thesedefinitive[,colname]),]
definitive =.GlobalEnv$definitive
cln_definitive = definitive[is.na(definitive[,theID]),]
keep_definitive = definitive[!is.na(definitive[,theID]),]
nrow(thesedefinitive>0)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R', echo=TRUE)
test = getTaxaIDs(spec_list = head(GSSPECIES,30), comm_col = "COMM", sci_col = "SPEC")
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
missing
.GlobalEnv$definitive
definitive
.GlobalEnv$definitive$AphiaID
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
data.frame(t(data.frame(sapply_pb(.GlobalEnv$definitive$AphiaID,chk_worrmsTSN)))[,1])
sapply_pb(.GlobalEnv$definitive$AphiaID,chk_worrmsTSN)
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
source('/media/sf_git/Maritimes/Mar.odissupport/R/getTaxaIDs.R')
